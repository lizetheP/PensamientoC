<div style="font-family:verdana; font-size:10px">
<h3> Strings o cadenas de texto  </h3>

El archivo se debe llamar <strong>cadenas.py</strong>

La función <strong>cuenta_ocurrencias(cadena, letra)</strong>  que recibe dos cadenas: la primera contiene una palabra y la segunda contiene el caracter a buscar. La función regresa el número de veces que el caracter es encontrado en la cadena. Como te puedes dar cuenta, debes de contar el caracter sin importar que esté escrito en minúscula o mayúscula, por lo que se recomienda utilizar los métodos upper( ) o lower( ).  

Casos de prueba: 

Input: Número de opción (1. cuenta_ocurrencias(cadena, caracter)) 
Input: Cadena de texto para buscar caracter. 
Input: Caracter a buscar en la cadena. 
Output: Número de veces que se encuentra el caracter en la cadena. 

>>> 1
>>> Hola! /* Mundo%@
>>> o
2 

La función <strong>imprime_pos_espacios(cadena)</strong> que recibe una cadena de texto. La función despliega las posiciones donde se encuentra un espacio en blanco. Emplea el modificador <strong>end=" "</strong> en el print para evitar que cada print salte de línea. 

Casos de prueba: 

Input: Número de opción (2. imprime_pos_espacios(cadena)) 
Input: Cadena de texto.
Output: Las posiciones donde hay espacios en blanco en la cadena. 

>>> 2
>>> Hola esta es una prueba 
4 9 12 16 

La función <strong>cadena_mayusculas(cadena)</strong> que recibe una cadena de texto. La función regresa la cadena en mayúsculas. 

Casos de prueba: 

Input: Número de opción (3. cadena_mayusculas(cadena)) 
Input: Cadena de texto 
Output: La cadena en mayúsculas 

>>> 3
>>> Hola mundo
HOLA MUNDO

La función <strong>cuenta_vocales(cadena)</strong> que recibe una cadena y devuelve el número de vocales que hay en la cadena. 

Casos de prueba: 

Input: Número de opción (4. cuenta_vocales(cadena)) 
Input: Cadena de texto.
Output: Número de vocales que se encuentran en la cadena. 

>>> 4
>>> Hola MUNDO
4 

La función <strong>deletrea_cadena(cadena)</strong> que recibe una cadena e imprime cada letra en la cadena separada por un guion medio con excepción de la ultima letra, la cual la imprime sin agregar el guion después de ella. Emplea el modificador end="" en el print para evitar que cada print salte de línea, a excepción del último caracter.

Casos de prueba:  

Input: Número de opción (5. deletrea_cadena(cadena)) 
Input: Cadena a deletrear 
Output: Cadena con separación de un guion medio entre cada letra, excepto la última.  

>>> 5
>>> Buenos dias 
B-u-e-n-o-s- -d-i-a-s 

La función <strong>menu()</strong> que despliegue el siguiente menú en pantalla: 

1. Cuenta ocurrencias 
2. Imprime posición espacios 
3. Cadena mayúsculas 
4. Cuenta vocales 
5. Deletrea cadena 
6. Salir

La función <strong>main()</strong> que utilice la función menu para desplegar el menú correspondiente y de acuerdo a la opción seleccionada por el usuario le dé la oportunidad de ejecutar cualquiera de las funciones que han sido construidas. Utiliza el estatuto de control if anidado. Recuerda que la captura de datos debe ser realizada en la sección del main. En el script principal manda llamar a la función main.

En el <strong> script principal </strong> manda llamar a la función main.

<strong> NOTA IMPORTANTE: Tu programa no debe incluir ningún mensaje para pedir los datos y no debe incluir ningún mensaje diferente de lo que se te pide como salida. </strong>

El archivo se debe llamar <strong> cadenas.py</strong>
</div>