<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
     
  <meta http-equiv="Content-Type"
 content="text/html; charset=windows-1252">
     
  <meta name="GENERATOR" content="Microsoft FrontPage 5.0">
     
  <meta name="ProgId" content="FrontPage.Editor.Document">
  <title>WebQuest: El juego de ahorcado.</title>
         
  <script language="JavaScript" fptype="dynamicanimation">

  </script>
   
  <script language="JavaScript1.2" fptype="dynamicanimation"
 src="animate.js">
  </script>    
  <meta name="Microsoft Border" content="tlb, default">
</head>
  <body bgproperties="fixed" background="backg.gif" ="" leftmargin="0"
 marginwidth="0" topmargin="0" marginheight="0">
 <!--msnavigation--> 
<table border="0" cellpadding="0" cellspacing="0" width="100%">
   <tbody>
     <tr>
      <td>        
      <p><img border="0" src="gildedage.gif" width="600" height="93">
       </p>
   </td>
     </tr>
 <!--msnavigation-->   
  </tbody> 
</table>
 <!--msnavigation--> 
<table border="0" cellpadding="0" cellspacing="0" width="100%">
   <tbody>
     <tr>
       <td valign="top" width="1%">                               
      <table border="0" cellpadding="0" cellspacing="5" width="110">
                          <tbody>
           <tr>
                            <td><br>
             </td>
                          </tr>
                          <tr>
                            <td><br>
             </td>
                          </tr>
                          <tr>
                            <td><br>
             </td>
                          </tr>
                          <tr>
                            <td><br>
             </td>
                          </tr>
                          <tr>
                            <td><br>
             </td>
                          </tr>
                          <tr>
                            <td><br>
             </td>
                          </tr>
                          <tr>
                            <td><br>
             </td>
                          </tr>
                          <tr>
                            <td><br>
             </td>
                          </tr>
                          <tr>
                            <td> </td>
                          </tr>
                          <tr>
                            <td> </td>
                          </tr>
                                 
        </tbody>       
      </table>
   </td>
       <td valign="top" width="24"><br>
       </td>
 <!--msnavigation--><td valign="top">        
      <div align="left">         <br>
                     
      <table border="0" cellpadding="0" cellspacing="5" width="100%"
 height="100%" align="left">
            <tbody>
           <tr>
  <td valign="top" width="100%" height="100%">             
            <p><img src="titlega.jpg" naturalsizeflag="3" height="276"
 width="300" align="left" alt="Recursion">
             Se pretende crear el bien conocido juego del               
  "Ahoracado" apoyándonos en los conocimientos                  del lenguaje 
C para desarrollarlo. A lo largo del diseño                  del programa 
harás uso de las herramientas vistas en esta                  materia, descubre 
como sí tienen una utilidad real.</p>
                                                          
            <p>A lo largo de este documento se te especifica que es lo mínimo 
                 que se te pide, sin embargo tu tienes la libertad de modificar 
                 los lineamientos para mejorarlo o agregarle más funcionalidad 
                 si así lo quieres. </p>
                             
            <p>Para facilitar el entendimiento de cómo generar este programa, 
                 éste será explicado por fases o secciones, verás        
         como al final todas las fases se integran para generar un programa 
                 de calidad que cumplirá con lo que se espera.<br>
                </p>
                             
            <p><strong>Visión global del juego</strong>.</p>
                             
            <p>En este juego del ahorcado las palabras con las que se jugarán 
                 podrán pertenecer a uno de los 3 temas que se tendrán   
              disponibles y dos niveles de complejidad: básico y avanzado.<br>
                  Al iniciarse el programa deberás de asegurarte que el usuario 
                 seleccione un tema y un nivel para jugar o bien tu definir 
unos                  por default.<br>
                  El usuario deberá de poder cambiar de tema, para esto necesitarás 
                 de algún menú que muestre los temas existentes,         
        cuando el usuario elija uno y se tenga un nivel a jugar se abrirá 
                 un archivo de texto del que se leerán las palabras con 
                las que se jugará. Como se tienen dos niveles entonces  
               se tendrán dos archivos por cada tema, uno conteniendo   
              las palabras de ese tema para el nivel básico y el otro   
              del mismo tema pero para nivel avanzado.<br>
                  El jugador deberá poder elegir entre jugar a nivel básico 
                 o avanzado; en cada caso se tienen diferentes números máximos 
                 de equivocaciones.<br>
                  Cuando el usuario quiera comenzar a jugar se elegirá una 
                 palabra al azar y mientras al usuario no se le hayan acabado 
sus                  oportunidades de fallar se le pedirá al usuario una letra,
                 y se analiza si está dentro de la palabra que se está  
               adivinando. <br>
                  El usuario deberá de poder terminar la ronda del juego
                 en cuanto quiera, ya sea para terminar el programa o cambiar 
de                  nivel o tema.</p>
                             
            <p>Después que termine la ronda deberás decir si el          
       usuario ha ganado o perdido y cual era la palabra que se intentaba 
                 adivinar.<br>
                  Adicionalmente también se deberá de proveer la capacidad 
                 de aumentar nuevas palabras a los temas.</p>
                             
            <p>Toda esta visión se desarrolla y explica detalladamente   
              a lo largo de este documento, por ahora el propósito de   
              esta sección es tan sólo darte una idea de en qué         
        consiste este webquest.<br>
                </p>
                             
            <p><strong>¡ Comencemos ! </strong></p>
                             
            <p>En el juego existirá la posibilidad de tener dos niveles. 
                El usuario podrá elegir en cual quiere jugar. Las especificaciones 
                 de en que consiste cada nivel se definen a continuación.</p>
                             
            <p><strong>Sección de elegir nivel.</strong></p>
                             
            <p>Para el nivel bajo se va a dar un <strong>número máximo   
              de fallos de 10</strong>. Y el objetivo que se intentará   
              adivinar será sólo <em><strong>una palabra</strong></em><strong> 
                 </strong>de no menos de 10 y no más de 16 letras.</p>
                             
            <p>Para el nivel avanzado se va a dar un <strong>número máximo 
                 de fallos de 5</strong>. Y en este caso se van a adivinar 
            <strong><em>frases</em></strong>,                  con una longitud 
de no menos de 16 caracteres y no más                  de 30. Los espacios 
también se consideran dentro de esos                  30 caracteres.<br>
                  Como se ha mencionado antes, se van a tener varios temas 
de las                  palabras, y debido a que tenemos 2 niveles estamos 
hablando de                  que vamos a manejar 2 archivos de texto por cada
tema, un archivo                  con las palabras para el nivel básico y
otro archivo con                  las frases del nivel avanzado. Como ves, 
se hace referencia a                  distintos archivos dependiendo del nivel
en el que se esté                  jugando. Es por esto que necesitas guardar
la información                  acerca de en qué nivel se está jugando, esto
lo                  utilizaremos más adelante. Por ahora basta con decir que
                 es necesario definir una variable en la que se guardará 
                en qué nivel el jugador ha elegido jugar. <br>
                  La sugerencia que se te da es que esta variable sea un
char donde                  se podrá guardar una 'B' o una 'A', para indicar
que se                  está jugando en nivel básico o avanzado, respectivamente. 
               </p>
                             
            <p><strong>Fase de lectura de los archivos.</strong></p>
                             
            <p>Como ya se había mencionado anteriormente las palabras    
             que se van a utilizar para el juego estarán contenidas     
            en <strong>archivos de texto</strong> y para hacer más      
           útil e interesante nuestro juego estas palabras pertenecerán 
                a diversos temas. Para efectos de este webquest deberás 
                de definir 3 temas como mínimo. <br>
                  Sin embargo, recuerda que también se va a dar la opción 
                 de en qué nivel se va a jugar, teniendo dos niveles en 
                el juego.<br>
                  Debido a estas características tendremos 2 archivos por 
                 cada tema, uno conteniendo las palabras a usar para el nivel 
básico                  y otro archivo con las frases que se van a usar en 
el nivel avanzado.<br>
                  Para hacer más fácil la manipulación del              
   contenido de los archivos, estos se manejarán de la siguiente        
         forma: Para el archivo que contenga las palabras del nivel básico, 
                 cada línea contendrá sólo una palabra, y                
 para el archivo que contendrá las frases para el nivel                 
avanzado, cada línea contendrá sólo una frase.<br>
                  De esta forma evitas el problema de saber en donde empieza 
una                  palabra o una frase (Dependiendo si estás en nivel básico 
                 o avanzado) y en donde termina. <br>
                  Cuando se valla a comenzar a jugar deberás de generar un 
                 número aleatorio <strong>N</strong> menor al número     
            palabras contenidas en el archivo del tema seleccionado. En el
                 archivo se buscará la línea <strong>N</strong> y       
          la palabra contenida en esa línea será con la que             
    se jugará. <br>
                  Para lograr esto necesitarás la ayuda de dos funciones, 
                 una que dado el nombre de un archivo te regrese el número 
                 de líneas del archivo, que en realidad representará     
            el número de palabras o frases contenidas. Y otra función   
              que dado un número y el nombre de un archivo, te regrese   
              la palabra o la frase contenida en esa línea del archivo   
              dado. Esta segunda función es la que recibe el número     
            aleatorio del que hablábamos, y es necesario definir que    
             este número no será mayor al número de líneas              
   del archivo.<br>
                  <br>
                  <strong>Sección de temas.</strong></p>
                             
            <p>Para hacer más interesante el juego vamos a permitir que 
                haya distintos temas, es decir, que las palabras con las
que el                  usuario va a jugar estén relacionadas con un tema
específico.                  <br>
                  Dentro de las opciones de tu programa deberá de haber una 
                 referente a cambiar el tema de las palabras y al entrar se
tendrá                  un listado de los temas disponibles, temas de los
cuales el jugador                  podrá escoger.<br>
                  Cuando se valla a jugar, el tema escogido permanecerá vigente 
                 hasta que el usuario elija cambiar el tema. Entonces, en 
el momento                  que se elige un tema, el archivo en el cual se 
guardan las palabras                  de ese tema y para ese nivel se deberán 
de guardar en una                  variable. Cuando se requiera obtener otra 
palabra se hará                  referencia al archivo con el nombre especificado 
en dicha variable.<br>
                </p>
                             
            <blockquote>                                 
              <blockquote>                                     
                <blockquote>                                        
                  <p>Por ejemplo, podrías tener el siguiente esquema:<br>
                        <br>
                        </p>
                   
                  <center>                         <em>Menú de temas disponibles.</em> 
                       </center>
                        <em><br>
                        -Ciencias naturales.<br>
                        -Ciencias políticias.<br>
                        -Ciencias ocultas.</em>                   </blockquote>
                  </blockquote>
                </blockquote>
                             
            <p>E internamente tener un manejo de las operaciones de la siguiente 
                 forma:</p>
                             
            <p>Si la opción fue:</p>
                             
            <p>Ciencias naturales =&gt; si estoy en el nivel basico (archivo 
                 = natNivBasico.txt) sino <br>
                  (archivo = natNivAvanzado.txt) <br>
                  Ciencias políticas =&gt; si estoy en el nivel basico (archivo 
                 = polNivBasico.txt) sino <br>
                  (archivo = polNivAvanzado.txt)<br>
                  Ciencias ocultas =&gt; si estoy en el nivel basico (archivo 
=                  wicNivBasico.txt) <br>
                  sino (archivo = wicNivAvanzado.txt)<br>
                </p>
                             
            <p>Aquí es donde se ve la importancia del porqué es          
       necesario guardar el dato de en qué nivel se está                
 jugando. Las operaciones subsecuentes se simplificarán                 
con esta forma de trabaja: después de elegir el tema, cuando            
     necesites de una palabra nueva, tendrás guardado el nombre         
        del archivo al que leerás en la variable archivo (Como          
       fue llamada la variable para este ejemplo). </p>
                             
            <p>De esta forma, si el usuario se aburre de un tema, puede entrar 
                 nuevamente a tu menú de temas y cambiarlo. Los temas que 
                 se manejarán en el juego los elegirás con tu equipo.    
             Deben ser 3 temas como mínimo.<br>
                </p>
                             
            <p><strong>¿Cómo jugaremos? </strong></p>
                             
            <p>Hasta ahora ya hemos visto que vamos a tener varios temas, 
cómo                  se van a obtener las palabras de los archivos y la posibilidad
                 de jugar en modo básico o avanzado. <br>
                  Pero todavía no hemos hablado acerca del proceso de jugar 
                 en sí. </p>
                             
            <p>¿Qué es lo que pasa durante el juego?<br>
                  El jugador va da una letra, si la letra que se da es parte 
de                  la palabra que se está adivinando entonces se muestra 
esa                  letra en cada posición que ocupe dentro de la cadena. 
Es                  decir:</p>
                             
            <p><strong>Ejemplo A:</strong> <br>
                  Dada la frase: "Pedro perez". Nota como el espacio también 
                 se cuenta.</p>
                             
            <p>Frase secreta: * * * * * * * * * * *<br>
                  Intentamos con la letra "e". Si se encuentra en la frase, 
                 entonces:<br>
                  Frase secreta: * e * * * * * e * e *</p>
                             
            <p>Si hubiéramos fallado entonces no se muestra nada más.</p>
                             
            <p>Frase secreta: * e * * * * * e * e *<br>
                  Intentamos con "a". Fallamos, entonces no muestro nada
                 más.<br>
                  Frase secreta: * e * * * * * e * e * </p>
                             
            <p>Este proceso se deberá repetir hasta que ya no queden     
            más letras escondidas o el usuario quiera salirse. <br>
                </p>
                             
            <p>Recapitulando entonces las secciones anteriores al iniciarse 
                 el programa el usuario podrá elegir un nivel a jugar, el 
                 tema de las palabras, podrá comenzar a jugar o salirse 
                del programa. Si quiere elegir un nivel tendrá dos para 
                escoger, y al tomar uno deberás de iniciar las variables
                 que necesites para establecer el número máximo de      
           fallas, y la variable para indicar el nivel que está jugando 
                (Ver "Sección de elegir nivel.").<br>
                  Si se quiere elegir un tema entonces se deberá de desplegar 
                 un menú con los temas disponibles y al elegir un tema guardar 
                 en la variable correspondiente el nombre del archivo que 
contiene                  las palabras de ese tema para dicho nivel. (Ver 
sección                  anterior).<br>
                </p>
                             
            <p>Al elegir "comenzar a jugar" deberás de generar           
      un número aleatorio N, y obtener la palabra o frase contenida     
            en la línea N, del archivo correspondiente al tema y al     
            nivel elegidos.<br>
                  Hecho esto el jugador te dará letras, entonces deberás
                 de buscar en la palabra o frase esa letra, si se encuentra 
entonces                  será desplegada en pantalla. Si no entonces incrementarás 
                 el valor de una variable "contador" que te servirá      
           para llevar el registro de cuántas veces se ha equivocado    
             el jugador y si ha llegado a su límite (De acuerdo al nivel 
                en que juegue) entonces decir que el jugador ha perdido. 
           </p>
                             
            <p> En el ejemplo "A", vimos como las letras de la palabra   
              las vamos descubriendo poco a poco. Para lograr esta funcionalidad 
                 del juego necesitamos una función que nos ayude a determinar 
                 si una letra dada se encuentra dentro de la palabra que el
usuario                  está intentando adivinar. </p>
                             
            <p><br>
                  Veamos esto con otro ejemplo, Ejemplo B:<br>
                  Palabra que el usuario está intentando adivinar: "acupuntura".<br>
                  Nombre de la variable que aloja la palabra "acupuntura" 
                 : "palabraActual"<br>
                  Nombre de la función que buscará dentro de la cadena  
               de caracteres: "buscaLetra".<br>
                </p>
                             
            <p>El usuario deberá de ver en la pantalla:</p>
                             
            <p> </p>
             
            <center>**********</center>
             <br>
                  Da la letra e.<br>
                  En el programa se ejecuta la función buscaLetra('e');<br>
                  La función revisa cada letra contenida en la variable "palabraActual", 
                 si alguna de las letras si es la letra 'e', entonces el usuario
                 deja de ver los símbolos * en los que la "e"           
      ocupa ese lugar, si no entonces sigue viendo los símbolos         
        "*". <br>
                  Si no se encontró esa letra, come en este caso, entonces 
                 se registra en el contador que el usuario tuvo un intento 
fallido                  y se vuelve a imprimir en una pantalla limpia las 
letras que ya                  se adivinaron y las que no. Auxíliate de la 
función                  clrscr para limpiar la pantalla.                
           
            <p>Para este ejemplo, el usuario falló, entonces se sigue    
             imprimiendo la cadena</p>
                             
            <p>El usuario ve en pantalla:<br>
                  </p>
             
            <center>**********</center>
                             
            <p>Si el usuario intentara con la letra "a", entonces        
         la funcion buscaLetra('a') regresa un valor que signifique que 
                el jugador acertó y que se actualice lo que se imprime   
              en pantalla.</p>
                             
            <p>El usuario vería:</p>
                             
            <p> </p>
             
            <center>a * * * * * * * * a</center>
             <br>
                                            
            <p>Para facilitar el proceso anterior se te sugiere que tengas 
otra                  variable "palabraQueSeImprime" en la que se guarde la
                 palabra que se le está mostrando al usuario, es decir, 
                la que en un inicio está formada por los símbolos       
          "*". Cuando el usuario acierta es necesario limpiar           
      la pantalla y volverla a imprimir, pero esta vez sustituyendo     
            los símbolos "*" correspondientes por la letra              
   que se adivinó. Entonces lo que necesitas es que después             
    de que se intenta adivinar una letra se corra la función            
     de buscaLetra, si se encuentra la letra en la palabra revise en    
             que posición está y modificar en la variable palabraQueSeImprime 
                 el símbolo "*" de esa misma posición por                
 esa misma letra que se encontró. Así después                  de cada "clrscr" 
sólo tienes que imprimir esa                  variable con las letras ya actualizadas.</p>
            <p>                  <font color="#ff0000">Nota importante</font>,
la variable que                  en este ejemplo llamamos palabra QueSeImprime
debe ser de 31 letras                  de longitud, esto para que pueda albergar
tanto una palabra del                  nivel básico como una frase del nivel
avanzado, pero esto                  no significa que cuando se imprime en
pantalla se van a imprimir                  los 31 símbolos "*", se imprimirán
tantos                  símbolos "*" como letras haya en la palabra o   
              frase a adivinar. (Ver ejemplos A y B)</p>
                             
            <p>Cuando se termine de jugar con una palabra le deberás     
            preguntar al usuario si quiere seguir jugando o si quiere regresar 
                 al menú principal. De querer seguir jugando obtienes una 
                 nueva palabra y repites el proceso.</p>
                             
            <p><strong>! Dibujemos en C ¡</strong></p>
                             
            <p>¡ Oh si ! Cada que el usuario se equivoque sí vamos      
           a ir dibujando el proceso del ahorcado.<br>
                  C no es un lenguaje que te permita desplegar imágenes como 
                 las que vemos en internet, sin embargo esto no va a impedir 
que                  podamos dibujar. <br>
                </p>
                             
            <p><a href="hung.zip">Has clic aquí para obtener el código   
              que genera el dibujo</a>.</p>
                             
            <p>Tu equipo deberá desarrollar un procedimiento en el que   
              en base al número de intentos equivocados que se hayan    
             hecho y al nivel en que se está jugando se imprima el dibujo 
                 anterior en la fase correspondiente. <br>
                  Es decir, si el usuario no ha dado una letra incorrecta 
entonces                  no se dibujará nada, si ya tuvo un fallo entonces 
podrías                  imprimir la base de la horca y así al irse incrementando 
                 los fallos ir dibujando más. <br>
                  El juego terminará cuando el dibujo ya este completo o
                 cuando el usuario elija salir. (Deberás incluir esta opción.)<br>
                  Recuerda que el número de fallos cambia dependiendo si
                 estás en el nivel básico o en el avanzado.<br>
                </p>
                                                          </td>
           </tr>
                   
        </tbody>       
      </table>
        </div>
 
      <p> </p>
 <!--msnavigation--></td>
     </tr>
 <!--msnavigation-->   
  </tbody> 
</table>
 <!--msnavigation--> 
<table border="0" cellpadding="0" cellspacing="0" width="100%">
   <tbody>
     <tr>
       <td>         <br>
      </td>
     </tr>
 <!--msnavigation-->   
  </tbody> 
</table>
 
</body>
</html>
